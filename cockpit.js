// Importation des libs dont CockpitOBot a besoin car il ne peut pas se d√©brouiller tout seul
var irc = require('irc'); 
var config = require("./config.json")
var tracery = require("tracery-grammar");
const fetch = require('node-fetch');
var he = require('he');

// D√©finition des grammaires de Tracery (utilis√©es pour la g√©n√©ration des cha√Ænes de caract√®res) car
// CockpitOBot ne sait pas tr√®s bien parler fran√ßais (CockpitOBot: H√©! Jeuh parl b1!)
var meteo = tracery.createGrammar({ // Grammaire de la m√©t√©o (parfaitement pr√©cise!)
  'action': ["des poulpes et des poissons", "comme pas possible", "aussi fort que AlgoPy marche bien", "comme cheval qui urine", "c'est pas mal non?", "et il fera 404¬∞C au sol"],
  'temps': ["neigera", "pleuvera"],
  'origin': ["La m√©t√©o de demain : Il #temps# #action#"],
});

var aide = tracery.createGrammar({ // Grammaire des diff√©rentes aides (tr√®s relatives)
	"origin" : ["Non, je n'ai pas envie!", "D√©sol√©, j'ai crash!", "Selon la nouvelle l√©gislation europ√©enne, je ne peux pas vous aider sans collecter l'integralit√©e de vos donn√©es personnelles et les vendres aux chinois.", "Oui." , "C'est pas faux!", "Je dirais... de t√™te... 42!", "Blip Bloup Erreur 472!"]
})

var salutation = tracery.createGrammar({ // Grammaire de r√©ponse aux salutations (Salu!)
	"origin" : ["Salut üëã", "Hoy üëã", "Bonjourno üëã", "Yahoi moussaillon üè¥‚Äç‚ò†Ô∏è", "Coucou üòò", "Je ne salut pas les humains", "PTDR t ki"]
});
var messageTime = tracery.createGrammar({ // Grammaire des messages d'informations et de soutiens d'Apartar Science
	"origin" : ["Attention! Une erreure critique dans le systeme! Vous avez 99% de chance de mourir!! Ah. Ah. Ah. D'apr√®s mes archives, une boutade de temps en temps permet de garder le moral.", "Vous avez d√©j√† pens√© √† perdre les 5KG de masse corporelle que vous avez en trop?", "Le saviez vous? Selon Wikipedia, Nowa DƒÖbrowa est un village polonais de la gmina de Leoncin dans la powiat de Nowy Dw√≥r Mazowiecki de la vo√Øvodie de Mazovie dans le centre-est de la Pologne.", "Le saviez-vous? Moi non plus.", "Avez-vous d√©j√† vu, le petit fr√®re spirituel de GlaDOS? Maintenant oui."]
})
var client = new irc.Client(config.server, config.username, { // Naissance l'√™tre supr√®me CockpitOBot !
    channels: ["#" + config.channel],
});

client.join("#" + config.channel); // Connexion de CockpitOBot √† notre monde

var nb_meteo = 0; // Variable inutile (ou pas)

function isCommand(pCommande, pMessage) {
	/*
	isCommand : fonction : bool√©en
		Cette fonction permet √† ce bougre de CockpitOBot de savoir si le message est un message ou
		une commande

		CockpitOBot: JE SUIS PAS UN BOUGRE

	Param√®tres:
		pCommande : str : la commande en elle m√™me pour tester (CockpitOBot: Oui sinon je peux pas le deviner)
		pMessage : str : le message en lui m√™me (CockpitOBot: Sinon je peux pas lire dedans)
	*/

	if (pMessage.startsWith(config.prefix + pCommande)) {
		return true;
	} else {
		return false;
	}
};

function inMess(pMessage, pTable) {
	/*
	inMess : fonction : bool√©en
		Fonction permetant de d√©tecter si un mot contenant dans pTable est dans pMessage. Ceci permetra
		d'ameliorer l'intelligence de CockpitOBot

		(CockpitOBot: Parceque je ne suis pas suffisament intelligent ? √®w√©)

	Parametres:
		pMessage : str : Le message envoy√© par l'utilisateur et √† tester (CockpitOBot: Sinon je ne pourrais pas r√©pondre!)
		pTable : array : le tableau contenant les mots √† tester (CockpitOBot: Et encore une liste √† parcourir...)
	*/

	var sortie = false;
	var mess = pMessage.toLowerCase()
	for (i=0; i< pTable.length && sortie == false; i++) {
		if (mess.includes(pTable[i])) {
			sortie = true;
		}
	}

	return sortie
}

client.addListener("message#" + config.channel, function (from, message) { // Mise en √©coute de notre monde par CockpitOBot... (Attention! 1984 in coming!)
    if (isCommand("help", message)) { // Commande supere utile!
    	client.say("#" + config.channel, "‚ö†Ô∏è Commande non reconue! Utilisez !help pour avoir de l'aide!");
    };

    if (isCommand("meteo", message)) { // Donne le bulletin m√©t√©o du lendemain encore mieux que Louis Bodin
    	if (nb_meteo == 5) {
    		client.say("#" + config.channel, "Bon √ßa va tu la connais ta m√©t√©o maintenant non?!");
    		nb_meteo = 0;
    	} else {
    		client.say("#" + config.channel, meteo.flatten('#origin#'));
    		nb_meteo++;
    	}
    };

    if (isCommand("info", message)) { // Donne √† CockpitOBot le plaisir de se pr√©senter
    	client.say("#" + config.channel, "Bonjour ou bonsoir (je ne connais pas encore bien la diff√©rence pour les humains). Je suis " + config.username + " votre assistant d'op√©ration personnel. Je suis ici pour vous remonter le moral, vous assister. Je pr√©fere vous pr√©venir je suis, √† ce stade, encore une version Beta. Veuillez m'escuser pour mon orthographe et mes probl√®...√®...√®mes.")
    };

    if (message.includes("Salut") || message.includes("salut")) { // D√©tection des salutations et r√©ponses adapt√©es
    	client.say("#" + config.channel, salutation.flatten("#origin#"))
    }

    if (isCommand("chuck", message)) { // Cherche des Chuck Norris Fact (toujours pour remonter le moral!)
    	fetch("https://www.chucknorrisfacts.fr/api/get?data=tri:alea;type:txt;nb:1")
    		.then( function (response) {
    			if (response.ok)
        			return response.json();
        		throw new Error("R√©ponse non OK de l'API!")
    		})
    		.then( function (data) {
    			var texte = he.decode(data[0].fact)
    			client.say("#" + config.channel, texte)
    		})
    		.catch( function (error) {
    			console.log(error.message);
    		})
    }

    if (isCommand("wiki", message)) { // Recherche d'informations supra importantes sur Wikip√©dia
    	fetch("https://fr.wikipedia.org/w/api.php?action=query&list=search&prop=info&inprop=url&utf8=&format=json&origin=*&srlimit=20&srsearch=" + message.replace(config.prefix + "wiki", ""))
			.then(response => response.json())
			.then(data => {
		    	var results = data.query.search;
		    	client.say("#" + config.channel, "J'ai trouv√© un page Wikip√©dia : " + results[0].title + "\n" + encodeURI("https://fr.wikipedia.org/wiki/" + results[0].title))
			});
    }

    // R√©pond de mani√®re tr√®s courtoise aux demandes d'aides
    if (inMess(message, ["main-forte", "main forte", "renfort", "service", "aide", "assistance", "d√©pannage", "intervention", "rescousse", "guide", "secours"])) {
    	client.say("#" + config.channel, aide.flatten("#origin#"));
    }

    // La vrai commande d'aide (car il en faut quand m√™me une pour le jury!)
    if (isCommand("pleh", message)) {
    	client.say("#" + config.channel, `Voici la liste s√©rieuse des commandes de ${config.username} :\n‚ñ™Ô∏è${config.prefix}help : Recevoir la fausse aide du bot\n‚ñ™Ô∏è${config.prefix}wiki [texte] : Fait une recherche sur Wikip√©dia de [texte]\n‚ñ™Ô∏è${config.prefix}chuck : Donne une Chuck Norris fact (pour garder le moral)\n‚ñ™Ô∏è${config.prefix}meteo : Donne la m√©t√©o (fantaisiste) de demain\n\nLe bot r√©pond aussi √† des mots cl√©s comme "salut" ou "aide" compris dans des phrases.`)
    }

    // Memes cach√©s
    if (inMess(message, ["√©quipe", "equipe", "team"])) {
    	client.say("#" + config.channel, "Vous avez trouv√© un meme cach√©! \n> http://vps.bigaston.me/opa/bien_joue.jpg")
    }

    if (inMess(message, ["dur", "difficult√©e", "difficile", "difficultee"])) {
    	client.say("#" + config.channel, "Vous avez trouv√© un meme cach√©! \n> http://vps.bigaston.me/opa/dur.jpg")
    }

    if (inMess(message, ["memes", "temps"])) {
    	client.say("#" + config.channel, "Vous avez trouv√© un meme cach√©! \n> http://vps.bigaston.me/opa/memes.jpg")
    }

    if (inMess(message, ["opa", "batman", "robin"])) {
    	client.say("#" + config.channel, "Vous avez trouv√© un meme cach√©! \n> http://vps.bigaston.me/opa/memes.jpg")
    }

    if (inMess(message, ["php", "rage", "enervement"])) {
    	client.say("#" + config.channel, "Vous avez trouv√© un meme cach√©! \n> http://vps.bigaston.me/opa/without_php.jpg")
    }
});

// Mise en place des messages d'informations et de soutiens d'Apartar Science
setInterval(function(){client.action("#" + config.channel, messageTime.flatten("#origin#"))}, 600000);

// Envoit des messages aux nouveaux arrivants!
client.addListener("join", function(channel, who) {
	if (who == config.username) {return;}
	client.say(channel, "Bienvenue " + who + " dans le canal d'interraction avec votre assistant personnel, le " + config.username + "! Utiliser !help pour avoir de l'aide!");
});

// Envoit les erreures dans la console
client.addListener('error', function(message) {
    console.log('error: ', message);
});